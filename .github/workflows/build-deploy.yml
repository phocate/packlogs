name: Build and Deploy TiddlyWiki

on:
  # Trigger on pushes to main branch
  push:
    branches: [ main ]
    paths:
      - 'tids/**'
      - 'templates/**'
      - 'automated_import.js'
      - '.github/workflows/**'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild even if no changes'
        required: false
        default: false
        type: boolean

  # Trigger on pull requests for testing
  pull_request:
    branches: [ main ]
    paths:
      - 'tids/**'
      - 'templates/**'
      - 'automated_import.js'

  # Trigger automatically after log parsing completes
  workflow_run:
    workflows: ["Parse ArcDPS Logs"]
    types:
      - completed
    branches: [ main ]

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    # Only run if the triggering workflow succeeded (when triggered by workflow_run)
    # or for other trigger types
    if: github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Verify file structure
      run: |
        echo "Repository structure:"
        ls -la
        echo ""
        echo "Templates directory:"
        if [ -d "templates" ]; then
          ls -la templates/
        else
          echo "‚ùå Templates directory not found"
          exit 1
        fi
        echo ""
        echo "Tids directory:"
        if [ -d "tids" ]; then
          echo "Found $(find tids -name '*.tid' | wc -l) .tid files"
          ls -la tids/ | head -10
          
          # Show all .tid files for better visibility
          echo ""
          echo "All .tid files:"
          find tids -name '*.tid' -exec basename {} \;
        else
          echo "‚ùå Tids directory not found"
          exit 1
        fi
        echo ""
        echo "Import script:"
        if [ -f "automated_import.js" ]; then
          echo "‚úÖ automated_import.js found"
        else
          echo "‚ùå automated_import.js not found"
          exit 1
        fi
        
    - name: Run TiddlyWiki import
      run: |
        echo "Starting TiddlyWiki import process..."
        node automated_import.js
        
    - name: Verify build output
      run: |
        echo "Build output verification:"
        if [ -d "docs" ]; then
          echo "‚úÖ docs directory created"
          ls -la docs/
          
          if [ -f "docs/index.html" ]; then
            echo "‚úÖ index.html created"
            echo "File size: $(du -h docs/index.html | cut -f1)"
            
            # Basic validation - check if it's a valid HTML file
            if grep -q "<!DOCTYPE html>" docs/index.html || grep -q "<html" docs/index.html; then
              echo "‚úÖ Valid HTML structure detected"
            else
              echo "‚ö†Ô∏è  Warning: HTML structure validation failed"
            fi
            
            # Check if tiddlers were imported
            if grep -q "storeArea" docs/index.html; then
              echo "‚úÖ TiddlyWiki store area found"
              
              # Count imported tiddlers
              tiddler_count=$(grep -o '<div [^>]*title="[^"]*"' docs/index.html | wc -l)
              echo "üìä Imported approximately $tiddler_count tiddlers"
            else
              echo "‚ö†Ô∏è  Warning: No store area found in output"
            fi
          else
            echo "‚ùå index.html not found"
            exit 1
          fi
        else
          echo "‚ùå docs directory not created"
          exit 1
        fi
        
    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/
        
    - name: Upload build artifacts (for PRs and debugging)
      if: github.ref != 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: tiddlywiki-build
        path: docs/
        retention-days: 7
        
  deploy:
    # Only run deploy job on main branch pushes
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Create deployment summary
      run: |
        echo "## üöÄ TiddlyWiki Deployment Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Your TiddlyWiki has been successfully built and deployed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "üîó **Live URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### What happened:" >> $GITHUB_STEP_SUMMARY
        echo "1. ‚úÖ Imported all .tid files from the \`tids/\` directory" >> $GITHUB_STEP_SUMMARY
        echo "2. ‚úÖ Merged them with the template from \`templates/index.html\`" >> $GITHUB_STEP_SUMMARY
        echo "3. ‚úÖ Generated a complete TiddlyWiki in the \`docs/\` directory" >> $GITHUB_STEP_SUMMARY
        echo "4. ‚úÖ Deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Add information about the trigger
        if [ "${{ github.event_name }}" = "workflow_run" ]; then
          echo "### Trigger:" >> $GITHUB_STEP_SUMMARY
          echo "- This build was automatically triggered after ArcDPS log parsing completed" >> $GITHUB_STEP_SUMMARY
          echo "- The parsed .tid files were automatically included in this build" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### Next time:" >> $GITHUB_STEP_SUMMARY
        echo "- Add new logs to the \`logs/\` directory to trigger automatic parsing" >> $GITHUB_STEP_SUMMARY
        echo "- Or update your \`.tid\` files or template manually" >> $GITHUB_STEP_SUMMARY
        echo "- Push to the \`main\` branch" >> $GITHUB_STEP_SUMMARY
        echo "- This workflow will automatically rebuild and redeploy" >> $GITHUB_STEP_SUMMARY
