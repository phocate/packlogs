created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_stability_ChartData
type: text/vnd.tiddlywiki


const names = ["Fletcher Quillian", "Brianna De Arco", "Vesaya Emberstone", "Darkus The Black", "Archemist Gheddar", "Smol Gealia", "Vanya Vitala", "Brianna De Arco", "Dept Of Mech Engr", "General Ahchoo", "Ddisform", "Mildde", "Etheria Lain", "Sushiyum", "Evo Snugglebunny", "Yolonius Maximus", "Z\u00e4r\u00efl\u00e4", "Flitz K\u00e4ferchen", "B\u00e1g\u00e9ls", "Aerthan Breaker", "Ravynux", "Molten Halwa", "Geira Niell", "Blaze Fangdango", "Beto Man"];
const professions = ["Druid", "Spellbreaker", "Tempest", "Scourge", "Scourge", "Scourge", "Scrapper", "Berserker", "Scrapper", "Scourge", "Scourge", "Scrapper", "Chronomancer", "Scourge", "Dragonhunter", "Spellbreaker", "Firebrand", "Firebrand", "Dragonhunter", "Spellbreaker", "Herald", "Vindicator", "Chronomancer", "Firebrand", "Firebrand"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stability per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.2496, 0.0, 0.0, 0.7663, 0.5574, 0.5632, 0.6794, 0.8085, 0.8056, 0.5908, 0.524, 0.6528, 0.6257, 0.0, 0.0, 1.2172, 0.4279, 0.6682, 0.6102, 0.0, 0.8165], [0.624, 4.1915, 4.6563, 0.0, 2.5479], [0.0, 0.0, 0.0, 0.8708, 0.5214, 0.9984, 1.0192, 0.949, 1.1077, 0.376, 0.8908, 0.96, 0.8491, 0.0, 0.6233, 0.6086, 0.7701, 0.6205, 1.017, 1.0173, 1.0206], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.2084, 0.1074, 1.2052, 2.304, 2.2345, 0.0, 1.3356, 4.6658, 0.0, 1.7183, 0.0, 0.0, 0.0], [1.0449, 0.3776, 0.0, 1.9817, 1.7224, 1.6112, 0.0, 0.4192, 1.344, 1.6535, 0.0, 0.0, 1.42, 1.9681, 1.1932, 1.5255, 0.0, 0.8165], [0.0, 0.0, 0.0, 1.2654, 1.5105, 0.4834, 2.9868, 1.5744, 0.0, 0.0, 0.0, 4.3277, 2.396, 0.7637, 2.6951, 0.0, 0.0], [0.5824, 1.1886, 2.4123, 0.4876, 0.0, 0.2304, 0.7927, 2.2496, 0.7049, 1.1816, 0.1572, 2.3424, 1.4748, 1.507, 1.024, 2.7048, 1.198, 1.9092, 1.2204, 1.2566, 1.1907], [4.0071, 2.5175, 1.0742, 3.9824, 1.6512, 1.5195, 1.3717, 1.8698, 2.0286, 1.8825, 2.0524, 2.1865, 1.0173], [1.872, 1.7517, 2.4123, 1.428, 0.0, 0.8704, 1.2456, 2.2496, 1.6112, 1.3428, 1.8864, 1.3056, 0.9832, 0.0, 1.3356, 2.5696, 1.2835, 1.0023, 1.5763, 2.0944, 0.5783], [0.0, 0.0, 1.2887, 0.4855, 1.0496, 1.7552, 1.7575, 3.2224, 3.6523, 1.8864, 3.6864, 3.4858, 0.0, 1.2911, 2.9753, 1.8825, 1.241, 3.8646, 0.0, 2.9938], [0.3128, 1.6269, 0.8708, 0.8271, 1.4336, 2.0949, 2.4605, 3.9273, 3.0615, 4.3492, 1.9584, 1.1619, 0.0, 1.8253, 3.6515, 2.396, 1.2887, 2.1865, 0.0, 2.1433], [1.1648, 2.3773, 3.4782, 2.1246, 0.0, 0.9984, 1.5287, 2.2496, 2.8196, 2.0947, 2.8296, 1.8816, 2.0557, 0.0, 0.6678, 3.8543, 1.0268, 1.4319, 2.0848, 2.3936, 0.9526], [0.0, 0.0, 0.0, 5.3173, 5.0828, 2.9952, 7.3292, 1.4683, 3.6506, 2.1638, 0.0, 0.0, 7.5258, 2.5731], [0.0, 2.2522, 0.0, 0.0512, 2.4347, 0.4218, 1.6112, 2.9541, 5.1876, 3.072, 2.3239, 0.0, 0.8014, 6.1534, 1.1124, 1.6228, 4.9325, 2.9322, 1.1567], [3.744, 0.0, 4.1514, 2.0898, 0.899, 0.768, 2.0949, 2.0035, 2.8196, 2.6855, 3.93, 0.7296, 0.7597, 0.0, 0.6678, 2.4343, 3.8506, 1.0978, 3.6612, 2.0346, 0.0], [1.3312, 0.0, 5.4417, 3.274, 0.0, 1.8432, 3.1707, 5.5186, 3.2224, 3.9745, 6.4976, 3.1488, 3.3518, 0.0, 1.6472, 6.3563, 3.1661, 3.2934, 3.712, 1.855, 1.5989], [0.7488, 2.4398, 4.8246, 5.2245, 2.0317, 5.7856, 3.5671, 3.4447, 2.1147, 4.7802, 5.2924, 2.3424, 4.7371, 1.1785, 3.5171, 6.0858, 3.5939, 1.1932, 3.407, 2.8125, 1.3608], [0.0, 2.3773, 0.2244, 0.5096, 3.9017, 7.8546, 8.1102, 7.3884, 1.9968, 5.6309, 1.2365, 4.363, 13.3211, 6.6745, 4.1048, 7.6275, 0.0, 2.1773], [1.2512, 3.4782, 2.0947, 11.6852, 8.2176, 6.9716, 3.7094, 5.2088, 12.5097, 6.4177, 7.5413, 8.8479, 6.8816, 4.0484], [5.0752, 8.9461, 8.0223, 3.3437, 0.9709, 3.5072, 4.1333, 6.2215, 7.8546, 4.8876, 4.1396, 5.6448, 3.6646, 1.9127, 0.9349, 7.4382, 3.9362, 4.4389, 3.8138, 6.1635, 1.769], [0.0, 2.4104, 5.6832, 2.5026, 8.4042, 3.428, 6.4915, 24.9864, 5.9185, 12.4582, 19.3283, 9.8658], [4.2016, 4.8171, 16.6617, 11.7029, 1.1867, 6.0672, 4.1333, 15.7823, 11.4798, 5.9081, 12.9952, 9.2544, 6.5247, 5.1005, 2.7602, 4.3953, 5.7332, 2.1956, 13.1702, 4.9069, 5.4432], [5.6576, 13.4504, 18.0642, 10.1007, 3.1285, 5.12, 11.6637, 12.7946, 7.7539, 8.8621, 13.2048, 8.7168, 5.8097, 5.7187, 2.9828, 11.3602, 10.8674, 6.7777, 8.1868, 3.5904, 3.334], [8.4448, 9.2589, 14.6421, 8.3244, 5.1782, 5.5552, 3.7935, 11.8807, 15.6085, 10.9031, 7.3884, 9.7536, 7.1504, 3.6708, 7.6574, 5.342, 7.4446, 7.6845, 10.4751, 13.2845, 6.3958], [8.528, 11.6987, 15.6519, 8.9165, 4.3152, 4.5824, 7.1907, 10.2638, 5.6392, 9.9901, 14.3576, 8.8704, 7.3739, 6.2983, 5.9212, 14.6059, 11.9798, 9.1642, 6.4071, 10.7114, 5.171]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

