created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_downed_ChartData
type: text/vnd.tiddlywiki


const names = ["Darhid", "Guardian Wili", "Ivar Valkor", "Neige Rose", "Bronaut", "Dalgwynn The Blue", "Brianna De Arco", "Oda Warr", "Leafy Erikkson", "Heavy Metal Warrior", "Skytzo Frentik", "Zandiz", "Fade The Ranger", "B\u00e1g\u00e9ls", "Z\u00e4r\u00efl\u00e4", "S Is Hot", "Ddisform", "Mildde", "Ravynux", "Paksenarrion Ri", "Yolonius Maximus", "Molten Halwa", "Extenberianark", "Etheria Lain", "Aerthan Breaker", "Brianna De Arco", "General Ahchoo", "Smol Gealia", "Evo Snugglebunny", "Dept Of Mech Engr", "Darkus The Black", "Justice Northriver", "Dr Lichmore", "Beto Man", "Blaze Fangdango", "Whamcakes", "Trash Revenant", "Flitz K\u00e4ferchen", "Geira Niell", "P\u00f3g Mo Th\u00f3in Jr", "Aerie Seleste", "Fletcher Quillian", "Todays Dps Forecast", "Dragrons Lord", "Archemist Gheddar", "Forgrim Foehammer", "Fluffypinkhandcuffs", "Cypher Jormag", "Sushiyum", "Ereaven", "Vesaya Emberstone", "Vanya Vitala", "Dorito Mt Dew Gamer"];
const professions = ["Vindicator", "Firebrand", "Druid", "Vindicator", "Scrapper", "Willbender", "Spellbreaker", "Bladesworn", "Druid", "Spellbreaker", "Untamed", "Reaper", "Druid", "Dragonhunter", "Firebrand", "Catalyst", "Scourge", "Scrapper", "Herald", "Druid", "Spellbreaker", "Vindicator", "Warrior", "Chronomancer", "Spellbreaker", "Berserker", "Scourge", "Scourge", "Dragonhunter", "Scrapper", "Scourge", "Soulbeast", "Holosmith", "Firebrand", "Firebrand", "Necromancer", "Renegade", "Firebrand", "Chronomancer", "Spellbreaker", "Holosmith", "Druid", "Catalyst", "Renegade", "Scourge", "Spellbreaker", "Dragonhunter", "Dragonhunter", "Scourge", "Druid", "Tempest", "Scrapper", "Holosmith"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Downed per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 1, 0, 0, 0], [0, 1], [1], [1, 0, 0], [0, 1, 0, 1, 0, 0, 0], [2], [0, 0, 0, 1, 1], [1, 1, 1, 0, 0, 0], [0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 2, 0, 1, 0, 0, 1, 0, 0, 0], [1, 0, 2, 1, 1], [0, 1, 1, 3], [0, 1, 1, 1, 0, 2, 1], [0, 0, 2, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [4, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0], [3, 1, 1, 1, 0, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 1, 2, 1, 0, 1, 2, 0, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 2, 1, 0, 1, 1, 0, 1, 0, 0], [0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 1, 0, 2, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0], [2, 4, 0, 0, 1, 0, 0, 3, 0, 0, 0], [1, 2, 2, 0, 3, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 2, 0, 1, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 2, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 0, 2, 1, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 2, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0, 2, 0, 2, 2, 0, 1, 1, 0, 2, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 2, 1, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0, 0], [0, 0, 0, 0, 2, 1, 2, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 2, 2, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 1, 1, 1, 0, 1, 2, 0, 0, 1, 0, 1, 3, 0, 1, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 0, 1, 1, 0, 2, 0, 0, 1, 0, 0, 0], [0, 1, 0, 0, 1, 1, 1, 0, 0, 2, 0, 1, 3, 0, 1, 0, 0, 1, 0, 0, 0], [0, 1, 1, 1, 0, 1, 1, 1, 2, 1, 0, 1, 2, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 1, 1, 2, 2, 1, 0, 1, 1, 0, 1, 0, 0, 0], [0, 0, 0, 2, 1, 1, 0, 2, 2, 1, 0, 0, 0, 1, 1, 0, 3, 0, 0, 0], [0, 0, 0, 1, 1, 3, 4, 0, 0, 0, 0, 2, 0, 3, 0, 0, 0], [1, 0, 0, 1, 1, 0, 3, 2, 0, 0, 2, 0, 1, 0, 0, 3, 0, 0, 0], [0, 0, 0, 1, 1, 0, 1, 1, 2, 2, 1, 0, 3, 2, 0, 1, 0, 0], [0, 0, 0, 0, 1, 1, 3, 0, 1, 1, 2, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0], [0, 0, 0, 0, 1, 1, 2, 0, 2, 2, 1, 1, 1, 0, 2, 0, 0, 2, 0, 0, 0], [1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 2, 1, 0, 2, 1, 0, 1, 1]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

