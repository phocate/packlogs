created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_hitsMissed_ChartData
type: text/vnd.tiddlywiki


const names = ["Oda Warr", "Bronaut", "Etheria Lain", "Zandiz", "Darhid", "Ravynux", "Skytzo Frentik", "Justice Northriver", "Heavy Metal Warrior", "Ereaven", "Leafy Erikkson", "Paksenarrion Ri", "B\u00e1g\u00e9ls", "Fade The Ranger", "Smol Gealia", "Fluffypinkhandcuffs", "S Is Hot", "Dept Of Mech Engr", "Whamcakes", "Vanya Vitala", "Dorito Mt Dew Gamer", "Brianna De Arco", "Extenberianark", "Darkus The Black", "Dr Lichmore", "Ddisform", "Blaze Fangdango", "Sushiyum", "Forgrim Foehammer", "Flitz K\u00e4ferchen", "Trash Revenant", "Geira Niell", "Todays Dps Forecast", "Cypher Jormag", "Aerie Seleste", "Yolonius Maximus", "Z\u00e4r\u00efl\u00e4", "Fletcher Quillian", "Archemist Gheddar", "General Ahchoo", "Dragrons Lord", "Beto Man", "Mildde", "Vesaya Emberstone", "Molten Halwa", "Aerthan Breaker", "P\u00f3g Mo Th\u00f3in Jr", "Evo Snugglebunny"];
const professions = ["Bladesworn", "Scrapper", "Chronomancer", "Reaper", "Vindicator", "Herald", "Untamed", "Soulbeast", "Spellbreaker", "Druid", "Druid", "Druid", "Dragonhunter", "Druid", "Scourge", "Dragonhunter", "Catalyst", "Scrapper", "Necromancer", "Scrapper", "Holosmith", "Berserker", "Warrior", "Scourge", "Holosmith", "Scourge", "Firebrand", "Scourge", "Spellbreaker", "Firebrand", "Renegade", "Chronomancer", "Catalyst", "Dragonhunter", "Holosmith", "Spellbreaker", "Firebrand", "Druid", "Scourge", "Scourge", "Renegade", "Firebrand", "Scrapper", "Tempest", "Vindicator", "Spellbreaker", "Spellbreaker", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Hits Missed Against per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[4, 0, 0, 1, 0, 2], [0, 1, 1, 2, 1, 1, 2], [0, 0, 0, 3, 1, 0, 3, 0, 0, 1, 0, 0, 2, 0], [2, 2, 0, 7], [3, 1, 6, 0, 2], [5, 1, 3, 0, 0, 0, 4, 2, 0, 0, 0, 0], [2, 0, 9, 1, 3], [0, 0, 0, 0, 2, 3, 5, 4, 1, 0, 1], [0, 1, 0, 3, 6, 0, 6, 1, 0, 0], [1, 0, 0, 2, 1, 0, 1, 1, 1, 0, 0, 0, 0, 4, 3, 3, 2, 0], [7, 2, 1, 0, 0, 2, 6, 1, 1, 0, 1], [1, 0, 1, 8, 4, 8, 1], [0, 0, 0, 4, 1, 0, 0, 0, 13, 1, 3, 1, 0, 0], [3, 4, 3, 2, 4, 5, 3], [0, 0, 0, 0, 1, 4, 4, 2, 0, 0, 0, 6, 3, 3, 3, 0, 0], [1, 0, 4, 1, 0, 2, 2, 10, 0, 0, 5, 0, 0, 0, 0, 2, 1, 1, 0, 1], [0, 0, 0, 0, 1, 2, 3, 6, 5, 0, 0, 2, 6, 0, 1, 3, 0, 1], [0, 0, 0, 2, 2, 2, 3, 0, 1, 2, 2, 3, 3, 0, 0, 7, 2, 1, 1, 1, 1], [0, 0, 0, 2, 0, 2, 1, 2, 1, 3, 5, 3, 1, 0, 3, 6, 1, 0, 3, 1, 1], [1, 0, 0, 1, 0, 0, 4, 2, 1, 6, 1, 0, 1, 0, 1, 10, 0, 3, 3, 0, 1], [0, 1, 0, 0, 1, 1, 7, 7, 3, 0, 1, 1, 0, 0, 0, 7, 7, 0, 0], [3, 3, 5, 7, 3, 2, 0, 0, 3, 1, 8, 2, 0], [1, 0, 0, 1, 1, 1, 3, 1, 1, 0, 5, 4, 1, 0, 0, 12, 0, 6, 0, 0, 0], [0, 0, 0, 1, 5, 2, 5, 3, 5, 2, 3, 0, 2, 5, 1, 5, 0, 0, 1], [1, 1, 10, 1, 2, 0, 1, 8, 3, 10, 3, 0, 1], [0, 0, 3, 1, 2, 5, 1, 7, 5, 5, 0, 1, 0, 1, 5, 1, 0, 1, 1, 2], [2, 0, 0, 2, 1, 7, 5, 4, 5, 2, 2, 4, 2, 0, 0, 3, 1, 2, 2, 1, 0], [0, 0, 0, 0, 3, 2, 6, 1, 11, 5, 7, 0, 2, 3, 1, 2, 2, 0, 0], [1, 0, 1, 1, 1, 2, 4, 6, 1, 3, 5, 0, 1, 10, 4, 4, 1, 0, 1], [0, 0, 0, 1, 7, 3, 8, 5, 3, 3, 0, 1, 3, 1, 7, 3, 0, 2], [0, 0, 0, 4, 0, 2, 4, 3, 7, 5, 8, 0, 2, 0, 1, 3, 3, 0, 4, 0, 1], [0, 0, 0, 3, 4, 4, 2, 3, 3, 3, 5, 3, 3, 0, 1, 9, 0, 1, 2, 0, 3], [1, 1, 0, 3, 3, 5, 1, 0, 1, 3, 7, 4, 2, 0, 1, 4, 2, 5, 4, 0, 2], [0, 0, 0, 6, 4, 4, 9, 2, 0, 0, 0, 8, 4, 8, 5, 0, 0], [0, 0, 0, 2, 1, 5, 4, 3, 2, 3, 9, 2, 3, 0, 0, 9, 3, 5, 0, 0, 0], [0, 0, 0, 1, 0, 1, 5, 2, 0, 3, 8, 0, 11, 0, 1, 8, 3, 9, 1, 0, 0], [2, 2, 0, 2, 2, 2, 4, 3, 1, 2, 18, 4, 2, 0, 1, 6, 1, 2, 0, 0, 1], [0, 0, 0, 3, 4, 0, 2, 1, 3, 6, 14, 3, 4, 0, 3, 11, 0, 3, 1, 0, 0], [1, 3, 1, 7, 5, 2, 3, 8, 4, 5, 0, 3, 11, 1, 7, 3, 0, 0], [1, 0, 0, 2, 1, 1, 3, 5, 6, 11, 1, 4, 0, 4, 10, 3, 6, 4, 1, 1], [0, 2, 0, 3, 4, 1, 2, 4, 2, 2, 12, 4, 4, 0, 0, 10, 4, 3, 6, 0, 1], [1, 1, 0, 2, 2, 9, 3, 3, 2, 5, 6, 2, 3, 0, 1, 11, 1, 11, 1, 0, 1], [1, 0, 0, 3, 0, 5, 3, 1, 6, 5, 12, 5, 5, 0, 2, 14, 1, 0, 1, 0, 1], [0, 1, 0, 2, 0, 1, 7, 3, 6, 2, 10, 5, 4, 0, 0, 10, 4, 5, 3, 1, 2], [0, 0, 0, 1, 5, 3, 1, 4, 6, 8, 4, 8, 5, 0, 5, 10, 2, 1, 1, 1, 2], [2, 0, 0, 0, 2, 1, 4, 2, 7, 11, 4, 0, 8, 0, 1, 6, 0, 17, 2, 0, 1], [0, 1, 0, 3, 4, 4, 7, 1, 1, 3, 7, 11, 1, 0, 0, 17, 2, 3, 3, 0, 1], [2, 0, 0, 0, 1, 6, 2, 2, 3, 11, 18, 5, 4, 0, 3, 13, 2, 7, 7, 0, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

