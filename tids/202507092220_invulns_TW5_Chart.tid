created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_invulns_ChartData
type: text/vnd.tiddlywiki


const names = ["Leafy Erikkson", "Dalgwynn The Blue", "Brianna De Arco", "Heavy Metal Warrior", "Zandiz", "Brianna De Arco", "Skytzo Frentik", "Yolonius Maximus", "Fade The Ranger", "B\u00e1g\u00e9ls", "Z\u00e4r\u00efl\u00e4", "Ravynux", "Dragrons Lord", "Paksenarrion Ri", "Molten Halwa", "Smol Gealia", "Dorito Mt Dew Gamer", "Ddisform", "Blaze Fangdango", "Darkus The Black", "Justice Northriver", "Dept Of Mech Engr", "Extenberianark", "Aerthan Breaker", "P\u00f3g Mo Th\u00f3in Jr", "Mildde", "Trash Revenant", "Whamcakes", "Ereaven", "Dr Lichmore", "Forgrim Foehammer", "Aerie Seleste", "Archemist Gheddar", "Beto Man", "General Ahchoo", "Flitz K\u00e4ferchen", "Vanya Vitala", "S Is Hot", "Fletcher Quillian", "Etheria Lain", "Todays Dps Forecast", "Vesaya Emberstone", "Geira Niell", "Fluffypinkhandcuffs", "Evo Snugglebunny", "Cypher Jormag", "Sushiyum"];
const professions = ["Druid", "Willbender", "Spellbreaker", "Spellbreaker", "Reaper", "Berserker", "Untamed", "Spellbreaker", "Druid", "Dragonhunter", "Firebrand", "Herald", "Renegade", "Druid", "Vindicator", "Scourge", "Holosmith", "Scourge", "Firebrand", "Scourge", "Soulbeast", "Scrapper", "Warrior", "Spellbreaker", "Spellbreaker", "Scrapper", "Renegade", "Necromancer", "Druid", "Holosmith", "Spellbreaker", "Holosmith", "Scourge", "Firebrand", "Scourge", "Firebrand", "Scrapper", "Catalyst", "Druid", "Chronomancer", "Catalyst", "Tempest", "Chronomancer", "Dragonhunter", "Dragonhunter", "Dragonhunter", "Scourge"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Invulnerable to Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0, 0, 18, 0, 9, 0, 0, 4, 0, 0, 0], [43], [0, 0, 0, 6, 39], [0, 33, 0, 19, 0, 0, 24, 0, 0, 0], [0, 12, 2, 70], [0, 3, 13, 3, 39, 12, 0, 10, 8, 0, 22, 0, 0], [26, 0, 44, 18, 31], [0, 0, 0, 0, 9, 29, 37, 0, 25, 21, 0, 0, 34, 0, 0, 0, 0, 18, 0, 0, 0], [0, 36, 20, 29, 0, 88, 1], [0, 0, 48, 8, 8, 3, 1, 17, 58, 1, 35, 0, 0, 0], [0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 54, 0, 0, 0, 25, 74, 0, 20, 0, 0, 0], [84, 28, 0, 24, 0, 0, 26, 0, 23, 0, 0, 0], [0, 27, 0, 0, 40, 18, 4, 0, 0, 27, 0, 45, 29, 0, 0, 0, 0, 1, 0, 0, 0], [65, 35, 4, 50, 0, 17, 25], [0, 0, 0, 0, 55, 46, 0, 0, 0, 18, 0, 0, 64, 0, 0, 0, 0, 16, 0, 0, 0], [0, 0, 0, 0, 1, 57, 102, 0, 0, 0, 0, 2, 0, 44, 0, 0, 0], [17, 0, 0, 0, 10, 27, 48, 0, 6, 0, 34, 50, 13, 0, 2, 11, 0, 1, 5], [0, 0, 0, 48, 36, 41, 0, 0, 42, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0], [0, 0, 0, 0, 53, 33, 51, 0, 0, 7, 36, 0, 24, 0, 0, 20, 0, 4, 0, 0, 0], [0, 0, 0, 24, 12, 0, 22, 42, 31, 0, 41, 0, 33, 0, 0, 23, 0, 0, 0], [45, 78, 0, 0, 44, 0, 0, 65, 0, 0, 0], [0, 0, 0, 0, 66, 52, 32, 0, 25, 1, 0, 0, 42, 0, 14, 0, 0, 0, 0, 0, 0], [0, 0, 0, 14, 2, 20, 31, 40, 4, 30, 35, 0, 0, 0, 12, 19, 0, 27, 0, 0, 0], [0, 0, 0, 0, 7, 52, 40, 0, 0, 30, 24, 0, 21, 0, 10, 0, 0, 55, 0, 0, 0], [0, 0, 0, 0, 57, 33, 17, 0, 54, 22, 0, 28, 2, 0, 0, 0, 0, 35, 0, 0, 0], [0, 0, 0, 0, 20, 26, 0, 0, 139, 0, 0, 0, 22, 0, 38, 0, 0, 24, 0, 0, 0], [0, 0, 0, 0, 20, 19, 26, 0, 60, 12, 0, 0, 45, 0, 50, 23, 0, 23, 0, 0, 0], [0, 0, 0, 0, 7, 25, 10, 0, 0, 22, 0, 39, 21, 0, 78, 63, 0, 17, 0, 0, 0], [0, 0, 0, 22, 9, 0, 29, 18, 68, 12, 28, 0, 40, 33, 0, 33, 0, 0], [7, 74, 44, 0, 102, 0, 38, 0, 0, 30, 0, 0, 0], [0, 0, 6, 33, 26, 0, 5, 18, 94, 43, 17, 0, 30, 19, 0, 15, 0, 0, 0], [0, 0, 0, 0, 45, 24, 43, 0, 21, 83, 0, 0, 31, 0, 47, 0, 0, 13, 0, 0, 0], [0, 20, 40, 37, 0, 26, 29, 25, 48, 19, 0, 8, 70, 0, 10, 0, 0, 0], [0, 0, 0, 0, 36, 0, 28, 0, 29, 54, 0, 0, 87, 0, 19, 0, 58, 34, 0, 0, 0], [0, 0, 0, 44, 47, 33, 0, 0, 55, 0, 0, 38, 0, 122, 0, 0, 20, 0, 0, 0], [0, 0, 0, 48, 0, 0, 72, 0, 83, 69, 0, 6, 26, 0, 65, 0, 0, 0], [0, 0, 0, 0, 37, 41, 70, 0, 35, 62, 42, 28, 26, 0, 23, 0, 0, 17, 0, 0, 0], [0, 0, 0, 0, 16, 0, 38, 63, 47, 35, 0, 40, 107, 0, 46, 0, 0, 0], [0, 0, 0, 0, 57, 20, 7, 0, 30, 59, 0, 0, 47, 0, 32, 156, 0, 4, 0, 0, 0], [0, 0, 0, 55, 47, 91, 38, 0, 89, 105, 0, 0, 2, 1], [0, 0, 0, 5, 112, 55, 57, 20, 43, 2, 11, 26, 33, 0, 62, 21, 0, 16, 0, 0, 0], [0, 0, 0, 0, 20, 24, 181, 0, 21, 28, 41, 26, 74, 0, 29, 11, 0, 17, 45, 0, 0], [0, 0, 2, 1, 49, 54, 34, 3, 56, 59, 13, 87, 64, 7, 35, 13, 1, 64, 1, 0, 1], [0, 0, 0, 74, 4, 26, 9, 168, 38, 31, 29, 0, 0, 59, 31, 0, 76, 0, 0, 0], [0, 0, 0, 3, 66, 36, 132, 0, 64, 47, 15, 0, 57, 0, 43, 16, 0, 27, 39, 0, 0], [0, 0, 0, 64, 27, 64, 192, 7, 0, 0, 0, 40, 22, 133, 34, 0, 0], [19, 0, 0, 74, 62, 0, 158, 73, 0, 0, 49, 0, 40, 0, 0, 141, 0, 0, 0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

