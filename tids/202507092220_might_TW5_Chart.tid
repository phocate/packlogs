created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_might_ChartData
type: text/vnd.tiddlywiki


const names = ["Brianna De Arco", "Todays Dps Forecast", "Smol Gealia", "Dragrons Lord", "Extenberianark", "Leafy Erikkson", "Evo Snugglebunny", "Fade The Ranger", "Beto Man", "P\u00f3g Mo Th\u00f3in Jr", "Molten Halwa", "Flitz K\u00e4ferchen", "Z\u00e4r\u00efl\u00e4", "Ravynux", "Dept Of Mech Engr", "Ereaven", "Brianna De Arco", "Blaze Fangdango", "Vanya Vitala", "Darkus The Black", "Sushiyum", "General Ahchoo", "Geira Niell", "Mildde", "Yolonius Maximus", "Ddisform", "Fletcher Quillian", "Forgrim Foehammer", "Vesaya Emberstone", "Aerthan Breaker"];
const professions = ["Berserker", "Catalyst", "Scourge", "Renegade", "Warrior", "Druid", "Dragonhunter", "Druid", "Firebrand", "Spellbreaker", "Vindicator", "Firebrand", "Firebrand", "Herald", "Scrapper", "Druid", "Spellbreaker", "Firebrand", "Scrapper", "Scourge", "Scourge", "Scourge", "Chronomancer", "Scrapper", "Spellbreaker", "Scourge", "Druid", "Spellbreaker", "Tempest", "Spellbreaker"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Might per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[0.0, 4.1287, 0.0, 3.8776, 9.792, 2.1004, 0.0, 1.4692, 5.2744, 5.9043, 1.5751, 5.7461, 0.0], [0.7488, 0.0, 2.244, 2.3336, 0.0, 0.7168, 1.5287, 0.0, 3.2224, 1.8799, 2.8296, 4.4544, 4.6478, 0.0, 1.2466, 5.2744, 1.0268, 1.8137, 2.3899, 2.3936, 1.8711], [0.0, 0.0, 0.0, 6.1512, 8.056, 5.5858, 8.2792, 7.6416, 0.0, 0.0, 0.0, 15.6202, 5.3053, 2.1956, 6.3563, 0.0, 0.0], [2.9952, 6.8816, 5.9466, 2.5426, 2.2475, 3.9424, 0.2265, 4.8859, 8.9623, 2.8466, 5.4496, 5.6064, 1.7876, 0.0, 0.0, 8.1144, 1.7114, 0.2864, 0.0, 8.2579, 0.0], [2.9952, 0.0, 0.0, 6.966, 1.0968, 0.0, 3.5104, 4.0423, 8.1567, 6.5526, 6.6024, 3.8016, 3.3071, 0.0, 3.339, 8.9258, 5.0486, 0.6205, 7.78, 0.5984, 0.0], [6.55, 13.0944, 6.7482, 6.0472, 3.6506, 15.8907, 2.995, 8.4005, 11.8989, 6.4029, 0.0], [0.7488, 5.5678, 4.488, 4.3537, 2.5891, 2.4064, 2.2648, 5.3076, 6.9483, 4.4042, 7.86, 7.7184, 3.1283, 0.425, 0.8014, 11.4278, 3.8506, 1.7183, 3.8646, 2.9322, 2.2453], [10.1704, 8.3247, 4.6848, 9.682, 16.2393, 29.8072, 7.036], [3.9936, 3.9413, 4.488, 3.8313, 4.5669, 2.7904, 2.6045, 7.8736, 7.3511, 3.8134, 11.528, 8.256, 2.4133, 0.0, 1.5137, 12.104, 4.9631, 8.3527, 2.1865, 0.0, 0.8505], [0.0, 16.203, 18.513, 1.2191, 0.5933, 3.4816, 9.6254, 0.703, 4.5315, 2.5781, 14.2004, 2.5344, 5.184, 0.0, 0.0, 9.3316, 1.9681, 0.0, 3.6103, 6.4627, 0.0], [0.0, 0.0, 0.0, 15.3252, 5.2142, 5.376, 13.9285, 0.0, 0.0, 4.3505, 1.9912, 0.0, 2.2792, 3.2844, 0.0, 8.9258, 5.7332, 3.532, 9.4073, 25.791, 7.0421], [0.0, 0.8758, 5.4978, 0.0, 5.5537, 15.6085, 10.0438, 15.2484, 0.0, 10.0999, 0.0, 0.7568, 17.446, 6.5033, 10.0233, 8.797, 2.1542, 3.6061], [13.0624, 9.2589, 6.732, 6.0604, 3.0926, 13.6704, 5.4355, 2.9526, 4.6322, 5.1562, 5.6592, 4.3392, 5.8544, 2.2604, 4.0513, 4.0572, 3.7651, 1.4319, 2.2374, 9.4547, 4.3546], [11.9236, 3.5632, 11.0592, 2.2345, 5.0425, 5.2088, 16.2964, 19.4244, 4.248, 9.509, 26.6886, 8.8452], [0.7904, 8.1328, 2.1318, 7.7671, 1.6182, 4.864, 8.6629, 4.4641, 10.4728, 8.4862, 11.9996, 11.7888, 7.3292, 8.1724, 4.5856, 13.524, 7.6157, 6.8731, 4.7799, 6.1635, 1.0546], [0.0, 15.3714, 0.0, 6.6304, 7.7569, 11.3535, 7.049, 2.9003, 9.3272, 2.6496, 2.9942, 11.2249, 5.476, 3.4486, 20.0234, 3.4843, 12.5091, 21.2432], [10.608, 64.4368, 61.0368, 0.0, 14.6646], [6.4064, 16.1405, 14.2494, 7.5233, 3.4342, 2.9696, 1.6986, 4.0071, 12.1847, 11.1717, 7.1264, 11.5968, 7.7314, 0.6955, 4.4075, 6.6268, 5.9899, 7.8277, 5.1867, 10.5318, 6.838], [9.152, 0.9384, 5.5539, 11.9467, 6.311, 11.008, 8.0967, 12.5486, 7.1497, 5.4247, 5.8164, 11.9808, 6.7035, 8.0178, 6.3218, 24.0727, 12.4076, 6.1094, 10.1192, 11.4294, 2.0072], [8.7776, 14.639, 13.6884, 0.0, 7.7003, 15.7472, 13.6952, 17.5095, 4.2444, 9.8688, 12.826, 5.6994, 6.0992, 18.0545, 13.2634, 6.7299, 8.9496, 10.831, 6.0215], [1.4144, 16.8912, 10.7712, 1.2544, 8.8893, 8.1899, 24.6715, 14.1794, 22.7416, 15.3984, 7.5973, 1.4297, 4.8527, 23.667, 15.4882, 10.1665, 13.1193, 13.7632, 11.7029], [0.0, 0.0, 12.6781, 6.5627, 5.5296, 7.7569, 12.5837, 25.4771, 16.3815, 23.3704, 19.776, 12.9154, 0.0, 8.6814, 30.1585, 11.3808, 12.5053, 12.0514, 0.0, 13.3699], [8.6944, 29.0904, 30.0135, 11.9467, 3.4342, 5.4784, 7.8136, 9.842, 10.7749, 9.5067, 25.7284, 8.1024, 6.2119, 4.1538, 5.7431, 18.7984, 15.317, 13.3167, 8.797, 4.3085, 2.5855], [14.4768, 20.332, 16.5495, 14.5241, 1.78, 2.7136, 3.9068, 10.1583, 9.2644, 6.3915, 19.8596, 12.8256, 9.1614, 9.7759, 8.9485, 19.0688, 20.4512, 8.1141, 13.8312, 18.5504, 4.7968], [13.2288, 13.513, 19.2984, 20.7935, 3.1645, 0.4352, 6.0583, 12.0565, 17.119, 8.9159, 13.5192, 10.2528, 12.692, 9.0224, 6.767, 24.4784, 14.0335, 9.3073, 14.3397, 28.7232, 5.5112], [5.3802, 7.854, 16.6487, 9.3316, 9.856, 13.3623, 15.4308, 20.4421, 16.113, 27.3004, 13.4784, 16.3118, 3.4776, 12.5546, 26.9128, 10.354, 9.1642, 13.8312, 8.5571, 11.7709], [18.72, 6.5062, 29.2842, 19.8879, 7.5516, 10.368, 16.7029, 18.278, 7.1497, 11.3865, 21.2744, 9.6384, 4.6925, 10.5294, 3.1609, 13.524, 11.8087, 10.5006, 18.0517, 13.8829, 5.9195], [41.0394, 53.9121, 2.8408, 8.2944, 7.3606, 19.2271, 48.9402, 24.4918, 24.5756, 29.0688, 14.2561, 19.4939, 21.3251, 52.7436, 34.7414, 21.2876, 28.3235, 32.3136, 14.1523], [0.0, 35.409, 24.1791, 18.843, 7.4257, 10.88, 28.4232, 53.4983, 36.5541, 16.9724, 38.5664, 22.0416, 1.877, 3.439, 13.0444, 11.2249, 28.067, 30.404, 47.2396, 63.1312, 27.8624], [31.2832, 63.8738, 60.027, 47.9261, 2.1576, 22.144, 24.3466, 47.9798, 63.6424, 23.2027, 31.3352, 32.832, 26.099, 15.2435, 14.0683, 56.936, 45.6944, 28.6857, 44.1378, 48.231, 19.4594]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

