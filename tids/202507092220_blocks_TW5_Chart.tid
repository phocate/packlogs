created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_blocks_ChartData
type: text/vnd.tiddlywiki


const names = ["Skytzo Frentik", "Ravynux", "Fade The Ranger", "Brianna De Arco", "Justice Northriver", "Ereaven", "Etheria Lain", "Dorito Mt Dew Gamer", "Archemist Gheddar", "Paksenarrion Ri", "Vanya Vitala", "Heavy Metal Warrior", "Brianna De Arco", "Smol Gealia", "Leafy Erikkson", "Todays Dps Forecast", "Fletcher Quillian", "Darkus The Black", "Dr Lichmore", "Forgrim Foehammer", "Vesaya Emberstone", "Dept Of Mech Engr", "Extenberianark", "Z\u00e4r\u00efl\u00e4", "P\u00f3g Mo Th\u00f3in Jr", "Whamcakes", "S Is Hot", "Aerie Seleste", "Fluffypinkhandcuffs", "Flitz K\u00e4ferchen", "Ddisform", "Trash Revenant", "Sushiyum", "B\u00e1g\u00e9ls", "General Ahchoo", "Blaze Fangdango", "Cypher Jormag", "Dragrons Lord", "Mildde", "Beto Man", "Geira Niell", "Aerthan Breaker", "Molten Halwa", "Yolonius Maximus", "Evo Snugglebunny"];
const professions = ["Untamed", "Herald", "Druid", "Spellbreaker", "Soulbeast", "Druid", "Chronomancer", "Holosmith", "Scourge", "Druid", "Scrapper", "Spellbreaker", "Berserker", "Scourge", "Druid", "Catalyst", "Druid", "Scourge", "Holosmith", "Spellbreaker", "Tempest", "Scrapper", "Warrior", "Firebrand", "Spellbreaker", "Necromancer", "Catalyst", "Holosmith", "Dragonhunter", "Firebrand", "Scourge", "Renegade", "Scourge", "Dragonhunter", "Scourge", "Firebrand", "Dragonhunter", "Renegade", "Scrapper", "Firebrand", "Chronomancer", "Spellbreaker", "Vindicator", "Spellbreaker", "Dragonhunter"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[8, 5, 4, 5, 8], [5, 4, 14, 0, 0, 2, 4, 3, 1, 4, 2, 1], [3, 3, 1, 16, 17, 12, 2], [2, 3, 8, 27, 15], [10, 4, 0, 0, 6, 16, 3, 12, 4, 0, 1], [1, 8, 0, 2, 35, 4, 1, 4, 4, 1, 0, 0, 5, 5, 1, 1, 3, 2], [0, 0, 0, 11, 25, 4, 11, 2, 8, 9, 0, 0, 5, 2], [0, 0, 2, 0, 2, 9, 9, 5, 6, 0, 4, 11, 4, 1, 5, 8, 8, 3, 0], [9, 2, 0, 6, 8, 6, 5, 4, 15, 5, 0, 0, 8, 6, 8, 7, 3, 2], [7, 1, 12, 4, 2, 41, 27], [5, 1, 1, 8, 1, 3, 4, 3, 13, 9, 7, 4, 6, 1, 6, 11, 10, 7, 7, 1, 1], [0, 27, 0, 12, 25, 15, 19, 5, 2, 5], [5, 13, 3, 11, 8, 9, 3, 16, 7, 10, 17, 8, 2], [0, 0, 0, 5, 5, 8, 41, 10, 0, 0, 0, 11, 11, 7, 14, 2, 0], [21, 11, 10, 1, 10, 21, 12, 27, 3, 3, 2], [4, 1, 3, 7, 6, 6, 5, 3, 9, 6, 17, 12, 11, 2, 8, 12, 12, 7, 4, 3, 2], [4, 0, 3, 7, 20, 4, 7, 2, 12, 11, 35, 6, 2, 0, 0, 13, 3, 9, 3, 1, 2], [5, 1, 0, 1, 8, 4, 8, 17, 23, 5, 15, 0, 11, 16, 10, 21, 5, 2, 2], [0, 12, 25, 16, 23, 2, 10, 26, 13, 15, 7, 5, 3], [0, 3, 1, 6, 19, 5, 24, 21, 4, 15, 7, 2, 9, 19, 4, 6, 7, 2, 4], [1, 1, 3, 5, 0, 4, 6, 27, 10, 11, 16, 9, 13, 0, 5, 17, 7, 8, 19, 2, 1], [1, 2, 7, 5, 2, 8, 10, 5, 10, 11, 17, 9, 24, 1, 8, 19, 5, 16, 4, 4, 1], [1, 1, 1, 11, 10, 7, 11, 31, 10, 11, 18, 10, 10, 5, 9, 13, 5, 5, 2, 4, 1], [10, 5, 5, 8, 5, 10, 14, 3, 10, 9, 24, 7, 9, 2, 9, 14, 25, 2, 5, 2, 4], [0, 1, 2, 8, 9, 6, 9, 7, 14, 13, 26, 22, 12, 1, 4, 24, 12, 8, 7, 1, 4], [0, 1, 2, 5, 1, 14, 33, 16, 16, 8, 20, 1, 25, 3, 7, 14, 5, 14, 2, 6, 3], [0, 0, 1, 0, 17, 24, 7, 47, 19, 1, 1, 17, 32, 9, 15, 5, 2, 2], [2, 1, 6, 14, 8, 11, 13, 4, 21, 16, 26, 9, 16, 0, 4, 20, 12, 11, 2, 2, 2], [1, 4, 13, 6, 4, 21, 15, 54, 10, 15, 12, 0, 1, 8, 4, 8, 6, 19, 3, 1], [3, 3, 10, 1, 8, 31, 26, 28, 5, 17, 2, 18, 23, 7, 16, 5, 2, 3], [0, 1, 9, 10, 10, 27, 6, 18, 21, 20, 10, 10, 0, 10, 18, 13, 12, 10, 2, 3], [0, 0, 4, 10, 2, 2, 7, 18, 25, 24, 39, 18, 17, 5, 7, 8, 10, 9, 8, 4, 1], [0, 1, 1, 2, 15, 9, 10, 21, 39, 24, 28, 4, 4, 26, 9, 20, 10, 2, 3], [1, 3, 14, 42, 24, 21, 5, 35, 30, 17, 35, 13, 3, 5], [0, 2, 9, 3, 8, 1, 5, 11, 13, 43, 18, 25, 8, 11, 43, 14, 30, 3, 1, 2], [5, 2, 6, 13, 14, 15, 8, 19, 21, 28, 16, 27, 16, 1, 18, 10, 10, 22, 8, 7, 3], [0, 0, 0, 17, 44, 12, 53, 21, 0, 0, 0, 36, 31, 39, 13, 5, 2], [1, 5, 4, 12, 10, 23, 8, 10, 20, 18, 46, 19, 25, 2, 17, 11, 12, 13, 19, 4, 3], [4, 0, 3, 12, 1, 12, 7, 11, 52, 23, 32, 28, 32, 1, 7, 23, 7, 15, 8, 2, 3], [10, 4, 10, 13, 8, 16, 14, 16, 7, 21, 56, 22, 14, 2, 11, 26, 12, 15, 7, 6, 4], [0, 2, 2, 39, 41, 11, 18, 8, 17, 28, 41, 14, 9, 0, 3, 20, 7, 27, 5, 1, 3], [13, 2, 3, 10, 13, 16, 9, 13, 33, 44, 21, 13, 25, 2, 7, 17, 11, 29, 7, 7, 3], [5, 5, 6, 10, 18, 11, 6, 7, 58, 14, 32, 17, 17, 1, 27, 12, 9, 31, 8, 4, 4], [5, 2, 3, 14, 1, 19, 13, 10, 17, 16, 21, 8, 27, 5, 16, 34, 28, 56, 6, 4, 3], [5, 3, 7, 7, 41, 40, 53, 17, 20, 40, 50, 23, 58, 3, 8, 48, 25, 19, 40, 3, 4]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

