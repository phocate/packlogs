created: 20250709222041
creator: Drevarr
tags: ChartData
title: 202507092220_stunBreak_ChartData
type: text/vnd.tiddlywiki


const names = ["Pycachu", "Leafy Erikkson", "Dalgwynn The Blue", "Neige Rose", "Zandiz", "Etheria Lain", "Dept Of Mech Engr", "Oda Warr", "Fade The Ranger", "Ereaven", "Brianna De Arco", "Brianna De Arco", "Skytzo Frentik", "Archemist Gheddar", "Geira Niell", "Fletcher Quillian", "Blaze Fangdango", "Todays Dps Forecast", "Dorito Mt Dew Gamer", "Heavy Metal Warrior", "Ravynux", "Fluffypinkhandcuffs", "Trash Revenant", "B\u00e1g\u00e9ls", "Vanya Vitala", "S Is Hot", "Justice Northriver", "Dr Lichmore", "Paksenarrion Ri", "Darkus The Black", "Aerthan Breaker", "Smol Gealia", "Cypher Jormag", "Flitz K\u00e4ferchen", "Molten Halwa", "Dragrons Lord", "Aerie Seleste", "P\u00f3g Mo Th\u00f3in Jr", "Ddisform", "Forgrim Foehammer", "Sushiyum", "Beto Man", "General Ahchoo", "Extenberianark", "Whamcakes", "Yolonius Maximus", "Mildde", "Z\u00e4r\u00efl\u00e4", "Evo Snugglebunny", "Vesaya Emberstone"];
const professions = ["Firebrand", "Druid", "Willbender", "Vindicator", "Reaper", "Chronomancer", "Scrapper", "Bladesworn", "Druid", "Druid", "Spellbreaker", "Berserker", "Untamed", "Scourge", "Chronomancer", "Druid", "Firebrand", "Catalyst", "Holosmith", "Spellbreaker", "Herald", "Dragonhunter", "Renegade", "Dragonhunter", "Scrapper", "Catalyst", "Soulbeast", "Holosmith", "Druid", "Scourge", "Spellbreaker", "Scourge", "Dragonhunter", "Firebrand", "Vindicator", "Renegade", "Holosmith", "Spellbreaker", "Scourge", "Spellbreaker", "Scourge", "Firebrand", "Scourge", "Warrior", "Necromancer", "Spellbreaker", "Scrapper", "Firebrand", "Dragonhunter", "Tempest"];
const ProfessionColor = {"Warrior": "#FF9933", "Berserker": "#FFA750", "Spellbreaker": "#FFB66D", "Bladesworn": "#FFC48A", "Guardian": "#3399cc", "Dragonhunter": "#50A7D3", "Firebrand": "#6DB6DA", "Willbender": "#8AC4E1", "Revenant": "#CC6342", "Herald": "#D3795D", "Renegade": "#DA8F78", "Vindicator": "#E1A593", "Engineer": "#996633", "Scrapper": "#A77B50", "Holosmith": "#B6916D", "Mechanist": "#C4A78A", "Ranger": "#66CC33", "Druid": "#7BD350", "Soulbeast": "#91DA6D", "Untamed": "#A7E18A", "Thief": "#CC6666", "Daredevil": "#D37B7B", "Deadeye": "#DA9191", "Specter": "#E1A7A7", "Elementalist": "#EC5752", "Tempest": "#EE6F6A", "Weaver": "#F18783", "Catalyst": "#F49F9C", "Mesmer": "#993399", "Chronomancer": "#A750A7", "Mirage": "#B66DB6", "Virtuoso": "#C48AC4", "Necromancer": "#339966", "Reaper": "#50A77B", "Scourge": "#6DB691", "Harbinger": "#8AC4A7"};
const short_Prof = {"Guardian": "Gdn", "Dragonhunter": "Dgh",	"Firebrand": "Fbd",	"Willbender": "Wbd", "Warrior": "War", "Berserker": "Brs", "Spellbreaker": "Spb", "Bladesworn": "Bds", "Engineer": "Eng", "Scrapper": "Scr", "Holosmith": "Hls", "Mechanist": "Mec", "Ranger": "Rgr", "Druid": "Dru", "Soulbeast": "Slb", "Untamed": "Unt", "Thief": "Thf", "Daredevil": "Dar", "Deadeye": "Ded", "Specter": "Spe", "Elementalist": "Ele", "Tempest": "Tmp", "Weaver": "Wea", "Catalyst": "Cat", "Mesmer": "Mes", "Chronomancer": "Chr", "Mirage": "Mir", "Virtuoso": "Vir", "Necromancer": "Nec", "Reaper": "Rea", "Scourge": "Scg", "Harbinger": "Har", "Revenant": "Rev", "Herald": "Her", "Renegade": "Ren", "Vindicator": "Vin", "Unknown": "Ukn"};
option = {
  title: [
    {text: 'Stun Breaks per Fight for all Fights Present', left: 'center'},
    {text: 'Output in seconds across all fights \nupper: Q3 + 1.5 * IQR \nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}
  ],
dataset: [
    {
      // prettier-ignore
      source: 
[[101.7, 0.0, 0.0], [52.4, 0.0, 0.0, 0.0, 44.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [107.42], [0.0, 0.0, 201.4], [34.83, 0.0, 0.0, 113.24], [0.0, 0.0, 0.0, 0.0, 0.0, 115.2, 0.0, 0.0, 0.0, 67.62, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 17.98, 25.6, 0.0, 0.0, 100.7, 0.0, 0.0, 38.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [202.86, 85.57, 0.0, 50.85, 0.0, 0.0], [0.0, 17.98, 0.0, 56.62, 0.0, 201.4, 53.71], [62.56, 0.0, 0.0, 0.0, 56.62, 0.0, 100.7, 0.0, 0.0, 0.0, 0.0, 19.32, 0.0, 0.0, 0.0, 0.0, 0.0, 59.84], [0.0, 0.0, 0.0, 25.6, 226.48], [0.0, 0.0, 107.42, 0.0, 38.4, 44.69, 0.0, 0.0, 0.0, 85.57, 47.73, 0.0, 0.0], [56.62, 35.15, 100.7, 107.42, 52.4], [34.83, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 89.38, 0.0, 0.0, 135.24, 0.0, 47.73, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 25.6, 56.62, 0.0, 0.0, 53.71, 104.8, 0.0, 0.0, 0.0, 0.0, 67.62, 0.0, 0.0, 0.0, 0.0, 0.0], [41.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 35.15, 0.0, 0.0, 0.0, 38.4, 44.69, 19.32, 0.0, 0.0, 0.0, 47.73, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 17.98, 25.6, 113.24, 0.0, 0.0, 0.0, 0.0, 38.4, 0.0, 0.0, 44.52, 0.0, 0.0, 47.73, 0.0, 0.0, 0.0], [41.6, 0.0, 0.0, 0.0, 35.96, 0.0, 56.62, 0.0, 0.0, 0.0, 52.4, 0.0, 0.0, 0.0, 0.0, 67.62, 0.0, 0.0, 50.85, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 226.48, 0.0, 0.0, 53.71, 0.0, 0.0, 0.0, 0.0, 0.0, 67.62, 0.0, 0.0, 50.85], [0.0, 44.69, 0.0, 89.04, 135.24, 85.57, 47.73, 0.0, 0.0, 34.02], [161.13, 0.0, 115.2, 0.0, 0.0, 0.0, 0.0, 85.57, 47.73, 0.0, 0.0, 0.0], [0.0, 56.1, 0.0, 0.0, 0.0, 0.0, 0.0, 100.7, 53.71, 0.0, 38.4, 0.0, 19.32, 0.0, 0.0, 0.0, 47.73, 50.85, 0.0, 34.02], [0.0, 0.0, 0.0, 0.0, 17.98, 51.2, 0.0, 0.0, 0.0, 53.71, 104.8, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 101.7, 0.0, 0.0], [0.0, 0.0, 107.42, 104.8, 38.4, 0.0, 0.0, 0.0, 202.86, 0.0, 47.73, 0.0, 0.0, 0.0], [0.0, 0.0, 56.1, 0.0, 35.96, 0.0, 0.0, 0.0, 201.4, 53.71, 0.0, 0.0, 0.0, 0.0, 44.52, 135.24, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 35.15, 0.0, 53.71, 157.2, 0.0, 0.0, 0.0, 0.0, 135.24, 85.57, 0.0, 0.0, 0.0, 34.02], [0.0, 76.8, 0.0, 0.0, 0.0, 135.24, 171.14, 95.46, 0.0, 59.84, 34.02], [0.0, 107.42, 104.8, 38.4, 44.69, 0.0, 44.52, 202.86, 0.0, 0.0, 0.0, 0.0, 0.0], [139.32, 17.98, 0.0, 226.48, 0.0, 100.7, 0.0], [0.0, 62.56, 0.0, 0.0, 0.0, 0.0, 0.0, 107.42, 0.0, 0.0, 134.07, 0.0, 89.04, 67.62, 0.0, 95.46, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 100.7, 0.0, 0.0, 0.0, 89.38, 0.0, 311.64, 67.62, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 70.3, 0.0, 161.13, 52.4, 38.4, 0.0, 0.0, 0.0, 67.62, 85.57, 95.46, 50.85, 0.0, 0.0], [0.0, 0.0, 0.0, 35.15, 0.0, 0.0, 52.4, 38.4, 0.0, 0.0, 0.0, 338.1, 0.0, 190.92, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 35.15, 0.0, 53.71, 209.6, 38.4, 44.69, 0.0, 44.52, 67.62, 85.57, 0.0, 50.85, 0.0, 0.0], [0.0, 62.56, 0.0, 0.0, 17.98, 0.0, 0.0, 0.0, 0.0, 0.0, 104.8, 0.0, 134.07, 0.0, 89.04, 135.24, 85.57, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 17.98, 0.0, 0.0, 0.0, 100.7, 53.71, 0.0, 76.8, 0.0, 0.0, 0.0, 270.48, 85.57, 95.46, 0.0, 0.0, 0.0], [41.6, 0.0, 0.0, 0.0, 17.98, 0.0, 56.62, 0.0, 201.4, 107.42, 0.0, 0.0, 178.76, 0.0, 44.52, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 34.83, 0.0, 25.6, 0.0, 35.15, 201.4, 53.71, 104.8, 0.0, 0.0, 0.0, 0.0, 135.24, 85.57, 95.46, 0.0, 0.0, 0.0], [0.0, 56.1, 34.83, 35.96, 25.6, 56.62, 0.0, 100.7, 0.0, 52.4, 0.0, 44.69, 0.0, 44.52, 67.62, 0.0, 47.73, 50.85, 59.84, 0.0], [0.0, 56.1, 35.96, 0.0, 0.0, 0.0, 100.7, 161.13, 52.4, 76.8, 44.69, 0.0, 44.52, 67.62, 85.57, 47.73, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 25.6, 56.62, 35.15, 100.7, 107.42, 209.6, 76.8, 0.0, 0.0, 0.0, 135.24, 0.0, 0.0, 50.85, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 35.96, 0.0, 56.62, 70.3, 0.0, 268.55, 52.4, 38.4, 0.0, 0.0, 44.52, 67.62, 171.14, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 25.6, 0.0, 35.15, 201.4, 53.71, 157.2, 38.4, 44.69, 0.0, 44.52, 202.86, 0.0, 95.46, 0.0, 59.84, 0.0], [0.0, 0.0, 0.0, 34.83, 17.98, 0.0, 56.62, 0.0, 0.0, 107.42, 157.2, 153.6, 44.69, 0.0, 0.0, 202.86, 0.0, 47.73, 0.0, 59.84, 0.0], [0.0, 0.0, 56.1, 0.0, 0.0, 0.0, 226.48, 35.15, 100.7, 107.42, 0.0, 0.0, 89.38, 19.32, 0.0, 202.86, 85.57, 95.46, 0.0, 59.84, 0.0], [0.0, 0.0, 56.1, 0.0, 53.94, 0.0, 0.0, 0.0, 201.4, 53.71, 209.6, 76.8, 89.38, 0.0, 0.0, 135.24, 171.14, 95.46, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 35.96, 76.8, 226.48, 0.0, 302.1, 0.0, 157.2, 76.8, 89.38, 0.0, 0.0, 0.0, 0.0, 95.46, 0.0, 0.0, 0.0], [0.0, 0.0, 56.1, 174.15, 35.96, 102.4, 56.62, 0.0, 0.0, 107.42, 0.0, 0.0, 89.38, 0.0, 89.04, 202.86, 85.57, 47.73, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 34.83, 0.0, 25.6, 56.62, 35.15, 0.0, 53.71, 366.8, 76.8, 178.76, 0.0, 0.0, 135.24, 85.57, 95.46, 0.0, 59.84, 0.0], [0.0, 0.0, 0.0, 0.0, 17.98, 0.0, 169.86, 0.0, 100.7, 268.55, 104.8, 76.8, 89.38, 0.0, 89.04, 202.86, 0.0, 190.92, 50.85, 0.0, 0.0]]
    },
	{
	  transform: {
		type: 'boxplot',
		config: {
		  itemNameFormatter: function (params) {
			return names[params.value]+" ("+short_Prof[professions[params.value]]+")";
		  }
		}
	  },
	},
	{
	  fromDatasetIndex: 1,
	  fromTransformResult: 1
	}
  ],
  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],
  tooltip: {trigger: 'item'},
  grid: {left: '25%', right: '10%', bottom: '15%'},
  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},
  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},
  series: [
	{
	  name: 'boxplot',
	  type: 'boxplot',
	  datasetIndex: 1,
	  tooltip: {trigger: 'item',
		  formatter: function (params) {
			//console.log(params.value);
		  return `<u><b>${params.value[0]}</b></u>
	<table>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Low   :</td>
		<td style="color:blue;"align="right"><b>${params.value[1].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q1    :</td>
		<td style="color:blue;"align="right"><b>${params.value[2].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q2    :</td>
		<td style="color:blue;"align="right"><b>${params.value[3].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">Q3    :</td>
		<td style="color:blue;"align="right"><b>${params.value[4].toFixed(2)}</b></td>
	  </tr>
	  <tr>
		  <td align="right">&#x2022;</td>
		<td align="left">High  :</td>
		<td style="color:blue;"align="right"><b>${params.value[5].toFixed(2)}</b></td>
	  </tr>  
	</table>`;              
		},    
		axisPointer: {type: 'shadow'}},      
	  itemStyle: {
		borderColor: function (seriesIndex) {
		  let myIndex = names.indexOf(seriesIndex.name.split(" (")[0]);
		  return ProfessionColor[professions[myIndex]];
				},
		borderWidth: 2
	  },
	  encode:{tooltip: [ 1, 2, 3, 4, 5]},
	  },
	{
	  name: 'outlier',
	  type: 'scatter',
	  encode: { x: 1, y: 0 },
	  datasetIndex: 2,
	}
  ]
};

